// Generated by CoffeeScript 1.6.3
(function() {
  var getRandomInt, mongo, o, o2, o3;

  mongo = null;

  getRandomInt = function(min, max) {
    min = Math.ceil(min);
    max = Math.floor(max);
    return Math.floor(Math.random() * (max - min)) + min;
  };

  o = {
    url: "mongodb://mongo:27017/",
    db: "test",
    collection: "tests",
    key: {
      name: "test100"
    },
    data: {
      name: "test100",
      value: getRandomInt(100, 999)
    }
  };

  o2 = {
    url: "mongodb://mongo:27017/",
    db: "test",
    collection: "tests",
    key: {
      name: "test100"
    },
    data: {
      name: "test101",
      value: getRandomInt(100, 999),
      enabled: true
    }
  };

  o3 = {
    url: "mongodb://mongo:27017/",
    db: "test",
    collection: "tests",
    key: {
      name: "test101"
    },
    data: {}
  };

  after(function(done) {
    return mongo["delete"](o, function(e1, r) {
      return mongo["delete"](o2, function(e2, r) {
        return mongo["delete"](o3, function(e3, r) {
          return done(e1 || e2 || e3);
        });
      });
    });
  });

  it("should be able to load", function(done) {
    mongo = require("../../gqmongodb");
    return done();
  });

  it("should be able to create", function(done) {
    return mongo.create(o, function(e, r) {
      console.dir(r);
      return done(e);
    });
  });

  it("should not be able to create same item twice", function(done) {
    return mongo.create(o, function(e, r) {
      console.log(r);
      return done(!(r = []));
    });
  });

  it("should be able to find", function(done) {
    return mongo.find(o, function(e, r) {
      console.dir(r);
      return done(e);
    });
  });

  it("should be able to disable", function(done) {
    return mongo.disable(o, function(e, r) {
      console.dir(r);
      return done(e);
    });
  });

  it("should be able to upsert", function(done) {
    console.log(o2);
    return mongo.upsert(o2, function(e, r) {
      console.dir(r);
      return done(e);
    });
  });

  it("should be able to delete", function(done) {
    return mongo["delete"](o3, function(e, r) {
      console.dir(r);
      return done(e);
    });
  });

}).call(this);

/*
//@ sourceMappingURL=test.map
*/
